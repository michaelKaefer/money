# Ensure that PHP is installed in Travis' build environment. Travis provides several versions of
# PHP like 5.6, 7.0, 7.1, 7.2, 7.3, 7.4, etc., each of them including XDebug and PHPUnit.
language: php

# Travis can cache content between builds. This speeds up the build process and saves resources.
cache:
  # With this option we can chose custom directories which should be cached between builds.
  directories:
    # Cache composer packages so "composer install" is faster.
    - $HOME/.composer/cache/files
    # Cache the Symfony binary's directory so that it does not have to be reinstalled.
    - $HOME/.symfony

env:
  global:
    # Add the Symfony binary's path to PATH.
    - PATH="$HOME/.symfony/bin:$PATH"

# Defines all jobs which Travis will run in parallel. For each PHP version we support we will run one job.
matrix:
  # With fast finishing enabled, Travis CI will mark your build as finished as soon as one of two
  # conditions are met: The only remaining jobs are allowed to fail, or a job has already failed. In
  # these cases, the status of the build can already be determined, so thereâ€™s no need to wait around
  # until the other jobs finish.
  fast_finish: true
  include:
    - php: 7.4.3
    #- php: 8.0

before_install:
  # If it is available update the Symfony binary, if not install it.
  - if symfony self:version --no-interaction; then symfony self:update --yes ; else wget https://get.symfony.com/cli/installer -O - | bash ; fi

install:
  # Install Composer packages including dev dependencies listed in require-dev.
  - composer install
  - composer require satooshi/php-coveralls

script:
  # There is no need to load data fixtures before running tests because the project repository
  # already includes a test database with all the fixtures needed to run the tests.
  - ./vendor/bin/phpunit --coverage-clover ./tests/logs/clover.xml
  # Check if composer.json is valid. To save time only do it during one of the jobs.
  - '[[ "$TRAVIS_PHP_VERSION" == "7.4" ]] || make composer-validate'
  # Check that the application doesn't use dependencies with known security vulnerabilities. To save time only do it during one of the jobs.
  - '[[ "$TRAVIS_PHP_VERSION" == "7.4" ]] || make security-check'
  # Check that the PHP source code follows the project's syntax rules. To save time only do it during one of the jobs.
  - '[[ "$TRAVIS_PHP_VERSION" == "7.4" ]] || make cs-fixer-dry-run-stop'
  # Check that the PHP source code does not violate the configured psalm rules. To save time only do it during one of the jobs.
  - '[[ "$TRAVIS_PHP_VERSION" == "7.4" ]] || php ./tools/psalm --shepherd'

after_script:
  - ./vendor/bin/php-coveralls -v
